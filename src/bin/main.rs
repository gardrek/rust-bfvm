extern crate bf;
use bf::*;

fn main() -> () {
    let zero = 0u8;
    let neg_two = -2i8;
    assert_eq!(neg_two as u8, zero.wrapping_add(neg_two as u8));

    //let mut main_vm = bf::BFVM::new();
    //let mut main_vm = bf::BFVM::from_file("tictactoe.bf");
    //let mut main_vm = bf::BFVM::from_code(">");
    let mut main_vm = bf::BFVM::from_code("+++++>++<[->>+<<]");

    /*let mut main_vm = bf::BFVM::from_code(
        "++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>."
    );*/

    /*let mut main_vm = bf::BFVM::from_code(
        ">++++++++[-<+++++++++>]<.>>+>-[+]++>++>+++[>[->+++<<+++>]<<]>-----.>->
        +++..+++.>-.<<+[>[+>+]>>]<--------------.>>.+++.------.--------.>+.>+."
    );*/

    /*let mut main_vm = bf::BFVM::from_code(
        "++++++++++[>+++>++++>+++++++++++>++++++++<<<<-]>++>++++>++>+++.<.--------.+.+++++.++++++++++.<<.>>>>++[<<---------.>>-]<<<<.>>----.++++++++++.-----------.++.++++++++.<<.>>++++++.++++.>>++++[<<----->>-]<<.>>++++[<<++++>>-]<<+.++.++++++.<.<.>>>>++++[<<---->>-]<<.+++++++++++.>>++++[<<---->>-]<<-.+++.--.<<.>>++++++++.++++++++++++.<<.>>---.-------.++++++++.<++.>>[-]<[-]<[-]<[-]<"
    );*/

    /*let mut main_vm = bf::BFVM::from_code(
        ">>>>--<-<<+[+[<+>--->->->-<<<]>]<<--.<++++++.<<-..<<.<+.>>.>>.<<<.+++.>>.>>-.<<<+."
    );*/

    //println!("{:?}\n--------\n", main_vm);
    while main_vm.step() {}
    println!("\n\n--------\n{:?}", main_vm);
}
